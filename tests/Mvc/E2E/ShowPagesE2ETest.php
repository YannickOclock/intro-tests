<?php
    namespace Tests\Mvc\E2E;

    use Mvc\Utils\Database;
    use PDO;
    use Symfony\Component\Dotenv\Dotenv;
    use Symfony\Component\Panther\PantherTestCase;

    class ShowPagesE2ETest extends PantherTestCase
    {
        public function setUp(): void
        {
            parent::setUp(); // TODO: Change the autogenerated stub
            // On charge les variables d'environnement (pour les tests sur la machine locale)
            // Pour le Github actions, les variables seront définies dans le contexte d'exécution
            if(file_exists(__DIR__ . '/../../../.env')) {
                $dotenv = new Dotenv();
                $dotenv->load(__DIR__ . '/../../../.env');
            }
            $pdo = Database::getPdo();
            $pdo->exec('TRUNCATE TABLE posts');
            $pdo->exec('INSERT INTO posts (title, content, author, date) VALUES ("Post 1", "Contenu du post 1", "Auteur 1", "2021-01-01")');
            $pdo->exec('INSERT INTO posts (title, content, author, date) VALUES ("Post 2", "Contenu du post 2", "Auteur 2", "2021-01-02")');
            $pdo->exec('INSERT INTO posts (title, content, author, date) VALUES ("Post 3", "Contenu du post 3", "Auteur 3", "2021-01-03")');
        }

        public function testShowHomePage()
        {
            $client = static::createPantherClient();
            $client->request('GET', '/');

            $client->waitFor('h1');

            $h1 = $client->getCrawler()->filter('h1')->text();
            $this->assertSame('Page d\'accueil', $h1);
        }

        public function testShowAsyncPostsPage()
        {
            // PROBLEME : le test peut ne pas passer car on utilise des données de la base de PRODUCTION
            // SOLUTION : il faudrait utiliser des fixtures et une base de données de TEST

            $client = static::createPantherClient();

            $client->request('GET', '/posts-async');
            $client->waitFor('article', 30);

            $posts = $client->getCrawler()->filter('article');
            $this->assertCount(3, $posts);
        }
    }